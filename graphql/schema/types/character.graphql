type Character {
  id: ID!
  name: String!
  description: String
  aliases: [String!]!
  created_at: Time!
  updated_at: Time!
  favorite: Boolean!
  image_path: String # Resolver
  scene_count(depth: Int): Int! # Resolver
  scene_marker_count(depth: Int): Int! # Resolver
  image_count(depth: Int): Int! # Resolver
  gallery_count(depth: Int): Int! # Resolver
  performer_count(depth: Int): Int! # Resolver
  studio_count(depth: Int): Int! # Resolver
  group_count(depth: Int): Int! # Resolver
  movie_count(depth: Int): Int! @deprecated(reason: "use group_count instead") # Resolver
}

input CharacterCreateInput {
  name: String!
  description: String
  aliases: [String!]
  favorite: Boolean
  "This should be a URL or a base64 encoded data URL"
  image: String
}

input CharacterUpdateInput {
  id: ID!
  name: String
  description: String
  aliases: [String!]
  favorite: Boolean
  "This should be a URL or a base64 encoded data URL"
  image: String
}

input CharacterDestroyInput {
  id: ID!
}

type FindCharactersResultType {
  count: Int!
  characters: [Character!]!
}

input BulkCharacterUpdateInput {
  ids: [ID!]
  description: String
  aliases: BulkUpdateStrings
  favorite: Boolean
}
